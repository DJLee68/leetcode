/*
A self-dividing number is a number that is divisible by every digit it contains.

For example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.

Also, a self-dividing number is not allowed to contain the digit zero.

Given a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.
*/

class Solution {
public:
    vector<int> selfDividingNumbers(int left, int right) {
        vector<int> res;
        for(int i = left; i<right+1; i++){
            string str_num = to_string(i);
            for(int j = 0; j<str_num.length(); j++){
                if(str_num[j] == '0' || i % (str_num[j] - '0') != 0){ break; }
                if(j == str_num.length() - 1){ res.push_back(i); }
            }
        }
        return res;
    }
};
