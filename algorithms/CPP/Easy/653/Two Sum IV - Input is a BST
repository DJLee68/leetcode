/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        unordered_map<int, int> umap;
        return findVal(root, k, umap);
    }
    bool findVal(TreeNode* root, int k, unordered_map<int, int> &umap){
        if(!root) return false;
        if(umap.find(k - root->val) != umap.end()) return true;
        umap[root->val] = true;
        return findVal(root->left, k, umap) || findVal(root->right, k, umap);

    }
};
