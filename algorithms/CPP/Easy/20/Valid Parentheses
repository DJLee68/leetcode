/*
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true
*/

class Solution {
public:
    bool isValid(string s) {
        string res;
        for(auto n : s){
            if(res.empty()) res.push_back(n);
            else{
                if(n=='('){
                    res.push_back(n);
                }
                else if(n==')'){
                    if(res.back() == '(') res.pop_back();
                    else return false;
                }
                else if(n=='['){
                    res.push_back(n);
                }
                else if(n==']'){
                    if(res.back() == '[') res.pop_back();
                    else return false;
                }
                else if(n=='{'){
                    res.push_back(n);
                }
                else if(n=='}'){
                    if(res.back() == '{') res.pop_back();
                    else return false;
                }
            }
        }
        if(res.empty()) return true;
        else return false;
    }
};
