/*
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4
*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* res = new ListNode;
        if(!l1 && !l2) return nullptr;
        if(!l1){
            res->val = l2->val;
            res->next = l2->next;
            return res;
        }
        else if(!l2){
            res->val = l1->val;
            res->next = l1->next;
            return res;
        }
        if(l1->val >= l2->val){
            res->val = l2->val;
            res->next = mergeTwoLists(l1, l2->next);
        }
        else{
            res->val = l1->val;
            res->next = mergeTwoLists(l1->next, l2);
        }
        return res;
    }
};
